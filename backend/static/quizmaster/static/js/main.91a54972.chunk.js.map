{"version":3,"sources":["environments/environment.js","actions/teamActions.js","actions/wsActions.js","actions/viewActions.js","actions/roundsActions.js","actions/roomActions.js","components/Error/Error.jsx","App.js","components/Login/Login.jsx","components/General/Item.jsx","components/Navigation/Navigation.jsx","components/Lobby/Lobby.jsx","actions/questionActions.js","components/CategorySelect/CategorySelect.jsx","components/ControlPanel/QuestionInfo.jsx","components/ControlPanel/QuestionQueue.jsx","components/ControlPanel/Scoreboard.jsx","components/ControlPanel/ControlPanel.jsx","components/EndRound/EndRound.jsx","reducers/viewReducer.js","reducers/roundsReducer.js","reducers/questionReducer.js","reducers/roomReducer.js","reducers/teamReducer.js","reducers/mainReducer.js","index.js"],"names":["environment","API_URL","WS_URL","teamActionTypes","SET_TEAMS","ACCEPT_TEAM","REJECT_TEAM","CLEAR_REJECTED","REMOVE_TEAMS","ADD_ANSWER","ANSWER_CORRECT","ANSWER_INCORRECT","setTeamsAction","teamList","type","acceptTeamAction","sessionId","rejectTeamAction","alterTeamAcceptedStatus","roomKey","accepted","dispatch","method","credentials","headers","Content-Type","body","JSON","stringify","fetch","concat","then","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","response","wrap","_context2","prev","next","json","sent","ok","Error","error","stop","_x2","apply","this","arguments","catch","err","addErrorAction","message","reconnects","initSocket","console","log","_ref","_callee","socket","_context","WebSocket","onopen","onmessage","eventInfo","parsedMessage","parse","data","handleMessage","onclose","store","getState","views","wsAllowed","setTimeout","_x","_ref3","_callee3","_context3","_x3","getTeamList","room","teamSessionId","questionId","answer","viewActionTypes","VIEW_LOBBY_SCREEN","VIEW_LOGIN_SCREEN","VIEW_CATEGORYSELECTION_SCREEN","VIEW_CPANEL_SCREEN","VIEW_END_ROUND_SCREEN","viewLoginScreenAction","viewLobbyAction","viewCategorySelectionScreenAction","viewControlPanelScreenAction","viewEndRoundScreenAction","setCategorySelectState","setViewByGameState","gameState","roundsActionTypes","startRound","setRounds","nextQuestion","setQuestions","revealAnswer","setRoundsAction","rounds","currentQuestionIndex","roomActionTypes","CREATE_ROOM","LEAVE_ROOM","ADD_ERROR","REMOVE_ERROR","createRoomAction","Errorlist","_this","props","react_default","createElement","className","onClick","removeError","xmlns","width","height","viewBox","d","getError","React","Component","ReactRedux","state","removeErrorAction","activeView","components_Error_Error","createRoom","href","Item","itemClass","undefined","index","text","team","acceptHandler","closeHandler","Navigation","leaveRoom","Lobby","clearRejectedTeams","components_Navigation_Navigation","length","map","key","teamName","getItemClass","filter","startGame","teams","_ref4","_callee4","_context4","_x4","questionActionTypes","SET_CATEGORY","ADD_CATEGORY","REMOVE_CATEGORY","EMPTY_SELECTED_CATEGORIES","CategorySelect","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","categories","getAllCategories","selectedCategories","category","includes","addCategory","emptySelectedCategoriesAction","_this2","getNoneSelectedItems","disabled","removeCategory","questions","options","newRound","QuestionInfo","correct","setAnswerStatus","currentQuestionObj","currentRound","activeQuestionIndex","totalQuestionsAmount","currentQuestion","question","currentAnswer","answers","forEach","answerClass","find","_id","push","answerRevealed","endRound","_ref5","_callee5","_context5","_x5","QuestionQueue","questionQueue","cssClass","removeQuestionFromQueue","toggledClass","toggled","Scoreboard","scoreboard","slice","sort","b","score","removeTeam","ControlPanel","showScoreboard","showQueue","setState","toggleScoreboard","toggleQueue","ControlPanel_QuestionInfo","_ref6","_callee6","_context6","_x6","EndRound","getSortedTeams","initalViewState","Login","initialRoundsState","initalQuestionState","initialRoomState","initialTeamState","mainReducer","Redux","objectSpread","teamIndex","action","findIndex","splice","teamListCopy","toConsumableArray","roundsCopy","it","__webpack_require__","__webpack_exports__","createStore","applyMiddleware","thunk","RootComponent","es","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91a54972.chunk.js","sourcesContent":["export default {\r\n    API_URL: \"http://localhost:3000\",\r\n    WS_URL: \"ws://localhost:3000\"\r\n};\r\n","import environment from '../environments/environment';\r\nimport { addErrorAction } from './roomActions';\r\n\r\nexport const teamActionTypes = {\r\n  SET_TEAMS: 'SET_TEAMS',\r\n  ACCEPT_TEAM: 'ACCEPT_TEAM',\r\n  REJECT_TEAM: 'REJECT_TEAM',\r\n  CLEAR_REJECTED: 'CLEAR_REJECTED',\r\n  REMOVE_TEAMS: 'REMOVE_TEAMS',\r\n  ADD_ANSWER: 'ADD_ANSWER',\r\n  ANSWER_CORRECT: 'ANSWER_CORRECT',\r\n  ANSWER_INCORRECT: 'ANSWER_INCORRECT'\r\n};\r\n\r\nexport function removeTeamsAction() {\r\n  return {\r\n    type: teamActionTypes.REMOVE_TEAMS\r\n  };\r\n}\r\n\r\nexport function setTeamsAction(teamList) {\r\n  return {\r\n    type: teamActionTypes.SET_TEAMS,\r\n    teamList: teamList\r\n  };\r\n}\r\n\r\nexport function acceptTeamAction(sessionId) {\r\n  return {\r\n    type: teamActionTypes.ACCEPT_TEAM,\r\n    sessionId: sessionId\r\n  };\r\n}\r\n\r\nexport function rejectTeamAction(sessionId) {\r\n  return {\r\n    type: teamActionTypes.REJECT_TEAM,\r\n    sessionId: sessionId\r\n  };\r\n}\r\n\r\nexport function addSubmittedAnswerAction(teamSessionId, questionId, answer) {\r\n  return {\r\n    type: teamActionTypes.ADD_ANSWER,\r\n    teamSessionId: teamSessionId,\r\n    questionId: questionId,\r\n    answer: answer\r\n  };\r\n}\r\n\r\nexport function setAnswerStatus(roomKey, questionId, teamSessionId, correct) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'PUT',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ correct: correct })\r\n    };\r\n\r\n    fetch(\r\n      `${environment.API_URL}/room/${roomKey}/round/question/${questionId}/answer/${teamSessionId}`,\r\n      options\r\n    )\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(setTeamsAction(body));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function alterTeamAcceptedStatus(roomKey, sessionId, accepted) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'PUT',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ accepted: accepted })\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/team/${sessionId}/status`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          accepted ? dispatch(acceptTeamAction(sessionId)) : dispatch(rejectTeamAction(sessionId));\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function getTeamList(roomKey) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}/teams`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(setTeamsAction(body));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function clearRejectedTeams(roomKey) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}/teams`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(setTeamsAction(body));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n","import environment from '../environments/environment';\r\nimport { store } from '../index';\r\nimport { getTeamList, rejectTeamAction, addSubmittedAnswerAction } from './teamActions';\r\n\r\nlet reconnects = 0;\r\n\r\nexport function initSocket() {\r\n  console.log('WS: Connecting to websocket');\r\n  return async dispatch => {\r\n    const socket = await new WebSocket(`${environment.WS_URL}/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log('WS: Websocket connected');\r\n      reconnects = 0;\r\n    };\r\n\r\n    socket.onmessage = eventInfo => {\r\n      const parsedMessage = JSON.parse(eventInfo.data);\r\n      dispatch(handleMessage(parsedMessage));\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log('WS: Websocket disconnected');\r\n\r\n      if (reconnects < 3 && store.getState().views.wsAllowed) {\r\n        console.log('WS: Trying to reconnect websocket');\r\n        reconnects++;\r\n        setTimeout(() => {\r\n          dispatch(initSocket());\r\n        }, 5000);\r\n      } else {\r\n        console.log('WS: Websocket connection could not be restored');\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\nfunction handleMessage(message) {\r\n  console.log(message);\r\n  return dispatch => {\r\n    switch (message.type) {\r\n      case 'quizmaster_newTeam':\r\n        const roomKey = store.getState().room.roomKey;\r\n        dispatch(getTeamList(roomKey));\r\n        break;\r\n      case 'quizmaster_teamLeft':\r\n        dispatch(rejectTeamAction(message.sessionId));\r\n        break;\r\n      case 'quizmaster_answerSubmitted':\r\n        dispatch(\r\n          addSubmittedAnswerAction(message.teamSessionId, message.questionId, message.answer)\r\n        );\r\n        break;\r\n      default:\r\n        console.log('Unknown message: ', message);\r\n    }\r\n  };\r\n}\r\n","import environment from '../environments/environment';\r\nimport { addErrorAction } from './roomActions';\r\n\r\nexport const viewActionTypes = {\r\n  VIEW_LOBBY_SCREEN: 'VIEW_LOBBY_SCREEN',\r\n  VIEW_LOGIN_SCREEN: 'VIEW_LOGIN_SCREEN',\r\n  VIEW_CATEGORYSELECTION_SCREEN: 'VIEW_CATEGORYSELECTION_SCREEN',\r\n  VIEW_CPANEL_SCREEN: 'VIEW_CPANEL_SCREEN',\r\n  VIEW_END_ROUND_SCREEN: 'VIEW_END_ROUND_SCREEN'\r\n};\r\n\r\nexport function viewLoginScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_LOGIN_SCREEN\r\n  };\r\n}\r\n\r\nexport function viewLobbyAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_LOBBY_SCREEN\r\n  };\r\n}\r\n\r\nexport function viewCategorySelectionScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_CATEGORYSELECTION_SCREEN\r\n  };\r\n}\r\n\r\nexport function viewControlPanelScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_CPANEL_SCREEN\r\n  };\r\n}\r\n\r\nexport function viewEndRoundScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_END_ROUND_SCREEN\r\n  };\r\n}\r\n\r\nexport function setCategorySelectState(roomKey) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'PUT',\r\n      credentials: 'include'\r\n    };\r\n    \r\n    fetch(\r\n      `${environment.API_URL}/room/${roomKey}/round/select-category`,\r\n      options\r\n    )\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(viewCategorySelectionScreenAction());\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function setViewByGameState(gameState) {\r\n    return dispatch => {\r\n        switch (gameState) {\r\n            case \"REGISTER\":\r\n                dispatch(viewLobbyAction());\r\n                break;\r\n            case \"CATEGORY_SELECT\":\r\n                dispatch(viewCategorySelectionScreenAction());\r\n                break;\r\n            case \"IN_ROUND\":\r\n            case \"SUBMIT_CLOSED\":\r\n                dispatch(viewControlPanelScreenAction());\r\n                break;\r\n            case \"END_ROUND\":\r\n                dispatch(viewEndRoundScreenAction());\r\n                break;\r\n            default:\r\n                dispatch(viewLoginScreenAction());\r\n                break;\r\n        }\r\n    };\r\n}\r\n","import environment from '../environments/environment';\r\nimport { viewEndRoundScreenAction, viewControlPanelScreenAction } from './viewActions';\r\nimport { addErrorAction } from './roomActions';\r\n\r\nexport const roundsActionTypes = {\r\n  startRound: 'startRound',\r\n  setRounds: 'setRounds',\r\n  nextQuestion: 'nextQuestion',\r\n  setQuestions: 'setQuestions',\r\n  revealAnswer: 'revealAnswer'\r\n};\r\n\r\nexport function setRoundsAction(rounds, currentQuestionIndex) {\r\n  return {\r\n    type: roundsActionTypes.setRounds,\r\n    rounds: rounds,\r\n    currentQuestionIndex: currentQuestionIndex\r\n  };\r\n}\r\n\r\nexport function nextQuestionAction(activeQuestionIndex) {\r\n  return {\r\n    type: roundsActionTypes.nextQuestion,\r\n    activeQuestionIndex: activeQuestionIndex\r\n  };\r\n}\r\n\r\nexport function setQuestionsAction(questions) {\r\n  return {\r\n    type: roundsActionTypes.setQuestions,\r\n    questions: questions\r\n  };\r\n}\r\n\r\nexport function revealAnswerAction() {\r\n  return {\r\n    type: roundsActionTypes.revealAnswer\r\n  };\r\n}\r\n\r\nexport function newRound(roomKey, categories) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        categories: categories\r\n      })\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/start`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(setRoundsAction(body.rounds, body.currentQuestionIndex));\r\n          dispatch(viewControlPanelScreenAction());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function endRound(roomKey) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'PUT',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/end`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(viewEndRoundScreenAction());\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function revealAnswer(roomKey) {\r\n  return async dispatch => {\r\n    const options = {\r\n      method: 'PUT',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/question/reveal`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(revealAnswerAction());\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function nextQuestion(roomKey) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'PUT',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/question/next`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(nextQuestionAction(body.activeQuestionIndex));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function removeQuestionFromQueue(roomKey, questionId) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/question/${questionId}`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(setQuestionsAction(body));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n","import environment from '../environments/environment';\r\nimport { initSocket } from './wsActions';\r\nimport { setViewByGameState, viewLoginScreenAction, viewLobbyAction } from './viewActions';\r\nimport { removeTeamsAction, setTeamsAction } from './teamActions';\r\nimport { setRoundsAction } from './roundsActions';\r\n\r\nexport const roomActionTypes = {\r\n  CREATE_ROOM: 'CREATE_ROOM',\r\n  LEAVE_ROOM: 'LEAVE_ROOM',\r\n  ADD_ERROR: 'ADD_ERROR',\r\n  REMOVE_ERROR: 'REMOVE_ERROR'\r\n};\r\n\r\nexport function addErrorAction(error) {\r\n  return {\r\n    type: roomActionTypes.ADD_ERROR,\r\n    error: error\r\n  };\r\n}\r\n\r\nexport function removeErrorAction(error) {\r\n  return {\r\n    type: roomActionTypes.REMOVE_ERROR,\r\n    error: error\r\n  };\r\n}\r\n\r\nexport function createRoomAction(roomKey) {\r\n  return {\r\n    type: roomActionTypes.CREATE_ROOM,\r\n    roomKey: roomKey\r\n  };\r\n}\r\n\r\nexport function leaveRoomAction() {\r\n  return {\r\n    type: roomActionTypes.LEAVE_ROOM\r\n  };\r\n}\r\n\r\nexport function createRoom() {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'POST',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(createRoomAction(body.roomKey));\r\n          dispatch(viewLobbyAction());\r\n          dispatch(initSocket());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function leaveRoom(roomKey) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(leaveRoomAction());\r\n          dispatch(removeTeamsAction());\r\n          dispatch(viewLoginScreenAction());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n\r\nexport function restoreSession() {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/restore/ROLE_QUIZMASTER`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(setTeamsAction(body.teams));\r\n          dispatch(createRoomAction(body.roomKey));\r\n          dispatch(setRoundsAction(body.rounds, body.currentQuestionIndex));\r\n          dispatch(setViewByGameState(body.gameState));\r\n          dispatch(initSocket());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => console.log(err.message));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport { removeErrorAction } from \"../../actions/roomActions\";\r\nimport \"./Error.scss\";\r\n\r\nclass Errorlist extends React.Component {\r\n  getError() {\r\n    if (this.props.error !== \"\") {\r\n      return (\r\n        <div className=\"Error\">\r\n          <h2>{this.props.error}</h2>\r\n          <button onClick={() => this.props.removeError(this.props.error)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.getError();\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    error: state.room.error\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeError: error => dispatch(removeErrorAction(error))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Errorlist);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport Error from \"./components/Error/Error.jsx\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <props.activeView />\r\n      <Error />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activeView: state.views.activeView\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps)(App);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\nimport { createRoom } from \"../../actions/roomActions\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div className=\"Component Login\">\r\n            <nav>\r\n                <div className=\"navInner\">\r\n                    <div className=\"navMiddle\">\r\n                        <h2>Quizmaster</h2>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <main>\r\n                <h1>Shotz: Quizmaster</h1>\r\n                <div className=\"startContainer\">\r\n                    <button className=\"bttn createRoomBttn\" onClick={props.createRoom}>\r\n                        Create a new room!\r\n                    </button>\r\n                    <a href=\"/\">or join a game!</a>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(props) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createRoom: () => dispatch(createRoom())\r\n    };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport \"./General.scss\";\r\n\r\nexport default function Item(props) {\r\n  return (\r\n    <div className={props.itemClass + \" Item\"}>\r\n      {props.index !== undefined && (\r\n        <span className=\"itemIndex\">{props.index}.</span>\r\n      )}\r\n      {props.text !== undefined && (\r\n        <div className=\"itemTextHolder\">\r\n          <span className=\"itemText\">{props.text}</span>\r\n          {props.team !== undefined && (\r\n            <span className=\"itemTeam\">{props.team}</span>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"itemButtonsHolder\">\r\n        {props.acceptHandler !== undefined && (\r\n          <span className=\"itemButtonHolder\">\r\n            <button className=\"itemButton__accept\" onClick={props.acceptHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" />\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        )}\r\n        {props.closeHandler !== undefined && (\r\n          <span className=\"itemButtonHolder\">\r\n            <button className=\"itemButton__close\" onClick={props.closeHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport \"./Navigation.scss\";\r\nimport { viewLoginScreenAction } from \"../../actions/viewActions\";\r\nimport { leaveRoom } from \"./../../actions/roomActions\";\r\n\r\nclass Navigation extends React.Component {\r\n  leaveRoom(roomKey) {\r\n    !roomKey ? this.props.viewLoginScreenAction() : this.props.leaveRoom(roomKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className=\"navInner\">\r\n          <div className=\"navLeft\">\r\n            <button onClick={() => this.leaveRoom(this.props.roomKey)}>End game</button>\r\n          </div>\r\n          {this.props.roomKey !== null && (\r\n            <div className=\"navMiddle\">\r\n              <span>Room: {this.props.roomKey}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.room.roomKey\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    leaveRoom: roomKey => dispatch(leaveRoom(roomKey)),\r\n    viewLoginScreenAction: () => dispatch(viewLoginScreenAction())\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport \"./Lobby.scss\";\r\nimport { alterTeamAcceptedStatus, clearRejectedTeams } from \"../../actions/teamActions\";\r\nimport Item from \"../General/Item\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport { setCategorySelectState } from \"../../actions/viewActions\";\r\n\r\nclass Lobby extends React.Component {\r\n  getItemClass(accepted) {\r\n    return accepted ? \"lobbyTeamListItem accepted\" : \"lobbyTeamListItem\";\r\n  }\r\n\r\n  startGame() {\r\n    this.props.clearRejectedTeams(this.props.roomKey);\r\n    this.props.setCategorySelectState(this.props.roomKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Component Lobby\">\r\n        <Navigation />\r\n        <main>\r\n          <h1>{this.props.teamList.length} teams joined:</h1>\r\n          <div className=\"lobbyTeamList\">\r\n            {this.props.teamList.map((team, index) => (\r\n              <Item\r\n                key={index + 1}\r\n                index={index + 1}\r\n                text={team.teamName}\r\n                acceptHandler={() => this.props.acceptTeamAction(this.props.roomKey, team.sessionId)}\r\n                closeHandler={() => this.props.rejectTeamAction(this.props.roomKey, team.sessionId)}\r\n                itemClass={this.getItemClass(team.accepted)}\r\n              />\r\n            ))}\r\n            {this.props.teamList.length < 1 && <span className=\"lobbyTeamListNoTeams\">There are no teams!</span>}\r\n          </div>\r\n          <div className=\"lobbyStartQuizContainer\">\r\n            {this.props.teamList.filter(team => team.accepted).length >= 2 && (\r\n              <button className=\"bttn\" onClick={() => this.startGame()}>\r\n                Start quiz\r\n              </button>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    teamList: state.teams.teamList,\r\n    roomKey: state.room.roomKey\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    acceptTeamAction: (roomKey, sessionId) => dispatch(alterTeamAcceptedStatus(roomKey, sessionId, true)),\r\n    rejectTeamAction: (roomKey, sessionId) => dispatch(alterTeamAcceptedStatus(roomKey, sessionId, false)),\r\n    clearRejectedTeams: roomKey => dispatch(clearRejectedTeams(roomKey)),\r\n    setCategorySelectState: roomKey => dispatch(setCategorySelectState(roomKey))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Lobby);\r\n","import environment from '../environments/environment';\r\nimport { addErrorAction } from './roomActions';\r\n\r\nexport const questionActionTypes = {\r\n  SET_CATEGORY: 'SET_CATEGORY',\r\n  ADD_CATEGORY: 'ADD_CATEGORY',\r\n  REMOVE_CATEGORY: 'REMOVE_CATEGORY',\r\n  EMPTY_SELECTED_CATEGORIES: 'EMPTY_SELECTED_CATEGORIES'\r\n};\r\n\r\nexport function setCategoriesAction(categories) {\r\n  return {\r\n    type: questionActionTypes.SET_CATEGORY,\r\n    categories: categories\r\n  };\r\n}\r\n\r\nexport function emptySelectedCategoriesAction() {\r\n  return {\r\n    type: questionActionTypes.EMPTY_SELECTED_CATEGORIES\r\n  };\r\n}\r\n\r\nexport function addCategory(category) {\r\n  return {\r\n    type: questionActionTypes.ADD_CATEGORY,\r\n    category: category\r\n  };\r\n}\r\n\r\nexport function removeCategory(category) {\r\n  return {\r\n    type: questionActionTypes.REMOVE_CATEGORY,\r\n    category: category\r\n  };\r\n}\r\n\r\nexport function getAllCategories() {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/categories`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) dispatch(setCategoriesAction(body));\r\n        else throw new Error(body.error);\r\n      })\r\n      .catch(err => dispatch(addErrorAction(err.message)));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport { getAllCategories, removeCategory, emptySelectedCategoriesAction } from \"../../actions/questionActions\";\r\nimport \"./CategorySelect.scss\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport { newRound } from \"../../actions/roundsActions\";\r\nimport { addCategory } from \"./../../actions/questionActions\";\r\n\r\nclass CategorySelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.categories.length < 1) this.props.getAllCategories();\r\n  }\r\n\r\n  getNoneSelectedItems(categories, selectedCategories) {\r\n    return categories.filter(category => !selectedCategories.includes(category));\r\n  }\r\n\r\n  addCategory(category) {\r\n    if (this.props.selectedCategories.length < 3) this.props.addCategory(category);\r\n  }\r\n\r\n  startRound() {\r\n    this.props.startRound(this.props.roomKey, this.props.selectedCategories);\r\n    this.props.emptySelectedCategoriesAction();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Component CategorySelection categorySelect\">\r\n        <Navigation />\r\n        <main>\r\n          <div className=\"categories\">\r\n            <h2>Categories</h2>\r\n            <p>Select at least 1 and max. 3 categories.</p>\r\n            <ul>\r\n              {this.getNoneSelectedItems(this.props.categories, this.props.selectedCategories).map((category, index) => {\r\n                const disabled = this.props.selectedCategories.length === 3 ? 'disabled' : ''; \r\n                return (\r\n                  <li className={disabled} key={index} onClick={() => this.addCategory(category)}>\r\n                    {category}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <div className=\"categories\">\r\n            <h2>Selected categories:</h2>\r\n            <ul>\r\n              {this.props.selectedCategories.map((category, index) => {\r\n                return (\r\n                  <li key={index} onClick={() => this.props.removeCategory(category)}>\r\n                    {category}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          {this.props.selectedCategories.length > 0 && (\r\n            <button className=\"bttn\" onClick={() => this.startRound()}>\r\n              Start round\r\n            </button>\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.room.roomKey,\r\n    categories: state.questions.categories,\r\n    selectedCategories: state.questions.selectedCategories\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    emptySelectedCategoriesAction: () => dispatch(emptySelectedCategoriesAction()),\r\n    getAllCategories: () => dispatch(getAllCategories()),\r\n    startRound: (roomKey, selectedCategories) => dispatch(newRound(roomKey, selectedCategories)),\r\n    addCategory: category => dispatch(addCategory(category)),\r\n    removeCategory: category => dispatch(removeCategory(category))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(CategorySelect);\r\n","import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\nimport Item from '../General/Item';\r\nimport { setAnswerStatus } from '../../actions/teamActions';\r\nimport { nextQuestion, endRound, revealAnswer } from '../../actions/roundsActions';\r\n\r\nclass QuestionInfo extends React.Component {\r\n  handleAnswerStatus(questionId, teamSessionId, correct) {\r\n    this.props.setAnswerStatus(this.props.roomKey, questionId, teamSessionId, correct);\r\n  }\r\n\r\n  render() {\r\n    const currentQuestionObj = this.props.currentRound.questions[this.props.activeQuestionIndex];\r\n    const totalQuestionsAmount = this.props.currentRound.questions.length;\r\n    const currentQuestion = currentQuestionObj.question;\r\n    const currentAnswer = this.props.currentRound.questions[this.props.activeQuestionIndex].answer;\r\n\r\n    const answers = [];\r\n\r\n    this.props.teamList.forEach(team => {\r\n      const answer = team.answers.find(answer => answer.questionId === currentQuestionObj._id);\r\n\r\n      if (answer) {\r\n        let answerClass;\r\n        if (answer.correct) answerClass = 'correct';\r\n        else if (answer.correct === false) answerClass = 'incorrect';\r\n\r\n        answers.push(\r\n          <Item\r\n            key={team.teamName}\r\n            text={answer.answer}\r\n            team={team.teamName}\r\n            itemClass={`itemAnswer ${answerClass}`}\r\n            closeHandler={() => {\r\n              this.props.setAnswerStatus(\r\n                this.props.roomKey,\r\n                answer.questionId,\r\n                team.sessionId,\r\n                false\r\n              );\r\n            }}\r\n            acceptHandler={() => {\r\n              this.props.setAnswerStatus(\r\n                this.props.roomKey,\r\n                answer.questionId,\r\n                team.sessionId,\r\n                true\r\n              );\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='QuestionInfo'>\r\n        <div className='infoActions'>\r\n          {!this.props.answerRevealed ? (\r\n            <button className='bttn' onClick={() => this.props.revealAnswer(this.props.roomKey)}>\r\n              Show answer to teams\r\n            </button>\r\n          ) : null}\r\n          <h2>Round {this.props.rounds.length}</h2>\r\n          {totalQuestionsAmount === this.props.activeQuestionIndex + 1 ? (\r\n            <button className='bttn' onClick={() => this.props.endRound(this.props.roomKey)}>\r\n              End round\r\n            </button>\r\n          ) : (\r\n            <button className='bttn' onClick={() => this.props.nextQuestion(this.props.roomKey)}>\r\n              Next question\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className='infoQuestion'>\r\n          <h2>\r\n            Question {this.props.activeQuestionIndex + 1}/{totalQuestionsAmount}:\r\n            <span> {currentQuestion}</span>\r\n          </h2>\r\n          <h2>\r\n            Answer: <span>{currentAnswer}</span>\r\n          </h2>\r\n          <h2>\r\n            Answers ({answers.length}/{this.props.teamList.length}):\r\n          </h2>\r\n          <div className='infoAnswersList'>{answers}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.room.roomKey,\r\n    rounds: state.rounds.rounds,\r\n    activeQuestionIndex: state.rounds.rounds[state.rounds.rounds.length - 1].activeQuestionIndex,\r\n    currentRound: state.rounds.rounds[state.rounds.rounds.length - 1],\r\n    teamList: state.teams.teamList,\r\n    answerRevealed: state.rounds.answerRevealed\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    nextQuestion: roomKey => dispatch(nextQuestion(roomKey)),\r\n    setAnswerStatus: (roomKey, questionId, teamSessionId, correct) =>\r\n      dispatch(setAnswerStatus(roomKey, questionId, teamSessionId, correct)),\r\n    endRound: roomKey => dispatch(endRound(roomKey)),\r\n    revealAnswer: roomKey => dispatch(revealAnswer(roomKey))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(QuestionInfo);\r\n","import React from 'react';\r\nimport Item from '../General/Item';\r\n\r\nexport default function QuestionQueue(props) {\r\n  const questionQueue = props.questions.map((question, index) => {\r\n    let cssClass = '';\r\n    if (index === props.currentQuestionIndex) cssClass = 'current';\r\n    else if (index < props.currentQuestionIndex) cssClass = 'greyedOut';\r\n\r\n    if (index > props.currentQuestionIndex) {\r\n      return (\r\n        <Item\r\n          key={index}\r\n          index={index + 1}\r\n          text={question.question}\r\n          itemClass={cssClass}\r\n          closeHandler={() => props.removeQuestionFromQueue(question._id)}\r\n        />\r\n      );\r\n    } else {\r\n      return <Item key={index} index={index + 1} text={question.question} itemClass={cssClass} />;\r\n    }\r\n  });\r\n\r\n  const toggledClass = props.toggled ? 'disabled' : '';\r\n\r\n  return (\r\n    <div className={'QuestionQueue ' + toggledClass}>\r\n      <header>\r\n        <h1>Question Queue</h1>\r\n      </header>\r\n      <main>{questionQueue}</main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Item from \"../General/Item\";\r\n\r\nexport default function Scoreboard(props) {\r\n  const sortedTeam = props.teams.slice().sort((a, b) => {\r\n    if(a.score > b.score) return -1\r\n    if(a.score < b.score) return 1\r\n    return 0\r\n  });\r\n\r\n  const scoreboard = sortedTeam.map((team, index) => {\r\n    return props.teams.length > 2\r\n      ? <Item key={index} index={index + 1} text={`${team.teamName} (${team.score} pts)`} closeHandler={() => { props.removeTeam(team.sessionId) }} />\r\n      : <Item key={index} index={index + 1} text={`${team.teamName} (${team.score} pts)`} />\r\n  });\r\n  \r\n  const toggledClass = props.toggled ? 'disabled' : '';\r\n\r\n  return (\r\n    <div className={'Scoreboard ' + toggledClass}>\r\n      <header>\r\n        <h1>Scoreboard</h1>\r\n      </header>\r\n      <main>{scoreboard}</main>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\n\r\nimport QuestionInfo from './QuestionInfo';\r\nimport QuestionQueue from './QuestionQueue';\r\nimport Scoreboard from './Scoreboard';\r\nimport { alterTeamAcceptedStatus } from '../../actions/teamActions';\r\nimport { removeQuestionFromQueue } from '../../actions/roundsActions';\r\n\r\nimport './ControlPanel.scss';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nclass ControlPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showScoreboard: true,\r\n      showQueue: true\r\n    };\r\n  }\r\n\r\n  toggleScoreboard() {\r\n    const state = this.state.showScoreboard;\r\n    this.setState({\r\n      showScoreboard: !state\r\n    })\r\n  }\r\n\r\n  toggleQueue() {\r\n    const state = this.state.showQueue;\r\n    this.setState({\r\n      showQueue: !state\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Component'>\r\n        <Navigation />\r\n\r\n        <nav className='navigationMobile'>\r\n          <div className='toggleScoreboard' onClick={() => this.toggleScoreboard()}>\r\n            <span>Scores</span>\r\n          </div>\r\n          <div className='toggleQueue' onClick={() => this.toggleQueue()}>\r\n            <span>Queue</span>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className='ControlPanel'>\r\n          <Scoreboard\r\n            toggled={this.state.showScoreboard}\r\n            teams={this.props.teams}\r\n            removeTeam={teamSessionId => this.props.removeTeam(this.props.roomKey, teamSessionId)}\r\n          />\r\n          <QuestionInfo />\r\n          <QuestionQueue\r\n            toggled={this.state.showQueue}\r\n            questions={this.props.rounds[this.props.rounds.length - 1].questions}\r\n            currentQuestionIndex={\r\n              this.props.rounds[this.props.rounds.length - 1].activeQuestionIndex\r\n            }\r\n            removeQuestionFromQueue={questionId =>\r\n              this.props.removeQuestionFromQueue(this.props.roomKey, questionId)\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.room.roomKey,\r\n    rounds: state.rounds.rounds,\r\n    teams: state.teams.teamList\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeTeam: (roomKey, sessionId) =>\r\n      dispatch(alterTeamAcceptedStatus(roomKey, sessionId, false)),\r\n    removeQuestionFromQueue: (roomKey, questionId) =>\r\n      dispatch(removeQuestionFromQueue(roomKey, questionId))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(ControlPanel);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport \"./EndRound.scss\";\r\n\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport { setCategorySelectState } from \"../../actions/viewActions\";\r\n\r\nclass EndRound extends React.Component {\r\n  getSortedTeams() {\r\n    return this.props.teams.slice().sort((a, b) => {\r\n      if(a.score > b.score) return -1\r\n      if(a.score < b.score) return 1\r\n      return 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Component EndRound\">\r\n        <Navigation />\r\n        <main>\r\n          <h1>End round {this.props.currentRound}</h1>\r\n          <ul>\r\n            {this.getSortedTeams().map((team, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <span className=\"position\">{index + 1}.</span>\r\n                  <span>\r\n                    {team.teamName}\r\n                  </span>\r\n                  <span className='score'>{team.score} points</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <button className=\"bttn\" onClick={() => this.props.setCategorySelectState(this.props.roomKey)}>\r\n            Start new round\r\n          </button>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.room.roomKey,\r\n    currentRound: state.rounds.rounds.length,\r\n    teams: state.teams.teamList\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setCategorySelectState: roomKey => dispatch(setCategorySelectState(roomKey))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(EndRound);\r\n","import Login from \"../components/Login/Login.jsx\";\r\nimport Lobby from \"../components/Lobby/Lobby.jsx\";\r\nimport CategorySelect from \"../components/CategorySelect/CategorySelect.jsx\";\r\nimport ControlPanel from \"../components/ControlPanel/ControlPanel.jsx\";\r\nimport { viewActionTypes } from \"../actions/viewActions\";\r\nimport EndRound from \"../components/EndRound/EndRound.jsx\";\r\n\r\nconst initalViewState = {\r\n    activeView: Login,\r\n    wsAllowed: false\r\n};\r\n\r\nexport default function viewReducer(state = initalViewState, action) {\r\n    switch (action.type) {\r\n        case viewActionTypes.VIEW_LOGIN_SCREEN:\r\n            return { ...state, activeView: Login, wsAllowed: false };\r\n        case viewActionTypes.VIEW_LOBBY_SCREEN:\r\n            return { ...state, activeView: Lobby, wsAllowed: true };\r\n        case viewActionTypes.VIEW_CATEGORYSELECTION_SCREEN:\r\n            return { ...state, activeView: CategorySelect, wsAllowed: true };\r\n        case viewActionTypes.VIEW_CPANEL_SCREEN:\r\n            return { ...state, activeView: ControlPanel, wsAllowed: true };\r\n        case viewActionTypes.VIEW_END_ROUND_SCREEN:\r\n            return { ...state, activeView: EndRound, wsAllowed: true };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { roundsActionTypes } from '../actions/roundsActions'\r\n\r\nconst initialRoundsState = {\r\n    rounds: [],\r\n    answerRevealed: false\r\n}\r\n\r\nexport default function roundsReducer(state = initialRoundsState, action) {\r\n    let roundsCopy;\r\n    switch (action.type) {\r\n        case roundsActionTypes.setRounds:\r\n            return { ...state, rounds: action.rounds }\r\n        case roundsActionTypes.nextQuestion:\r\n            roundsCopy = [...state.rounds];\r\n            roundsCopy[roundsCopy.length - 1].activeQuestionIndex = action.activeQuestionIndex;\r\n            return { ...state, rounds: roundsCopy, answerRevealed: false }\r\n        case roundsActionTypes.setQuestions:\r\n            roundsCopy = [...state.rounds];\r\n            roundsCopy[roundsCopy.length - 1].questions = action.questions;\r\n            return { ...state, rounds: roundsCopy }\r\n        case roundsActionTypes.revealAnswer:\r\n            return { ...state, answerRevealed: true }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { questionActionTypes } from \"../actions/questionActions\";\r\n\r\nconst initalQuestionState = {\r\n  categories: [],\r\n  selectedCategories: []\r\n};\r\n\r\nexport default function questionReducer(state = initalQuestionState, action) {\r\n  let selectedCategories;\r\n  switch (action.type) {\r\n    case questionActionTypes.SET_CATEGORY:\r\n      return { ...state, categories: action.categories };\r\n    case questionActionTypes.ADD_CATEGORY:\r\n      selectedCategories = state.selectedCategories.slice();\r\n      selectedCategories.push(action.category);\r\n      return {\r\n        ...state,\r\n        selectedCategories: selectedCategories.slice()\r\n      };\r\n    case questionActionTypes.REMOVE_CATEGORY:\r\n      selectedCategories = state.selectedCategories.slice();\r\n      selectedCategories = selectedCategories.filter(it => it !== action.category);\r\n      return {\r\n        ...state,\r\n        selectedCategories: selectedCategories.slice()\r\n      };\r\n    case questionActionTypes.EMPTY_SELECTED_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        selectedCategories: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { roomActionTypes } from '../actions/roomActions';\r\n\r\nconst initialRoomState = {\r\n  roomKey: null,\r\n  error: ''\r\n};\r\n\r\nexport default function roomReducer(state = initialRoomState, action) {\r\n  switch (action.type) {\r\n    case roomActionTypes.CREATE_ROOM:\r\n      return { ...state, roomKey: action.roomKey };\r\n    case roomActionTypes.LEAVE_ROOM:\r\n      return { ...initialRoomState };\r\n    case roomActionTypes.ADD_ERROR:\r\n      return { ...state, error: action.error };\r\n    case roomActionTypes.REMOVE_ERROR:\r\n      return { ...state, error: '' };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { teamActionTypes } from \"../actions/teamActions\";\r\n\r\nconst initialTeamState = {\r\n    teamList: []\r\n};\r\n\r\nexport default function teamReducer(state = initialTeamState, action) {\r\n    let teamIndex, teamList;\r\n    switch (action.type) {\r\n        case teamActionTypes.SET_TEAMS:\r\n            return { ...state, teamList: action.teamList };\r\n        case teamActionTypes.ACCEPT_TEAM:\r\n            teamIndex = state.teamList.findIndex(team => team.sessionId === action.sessionId);\r\n            teamList = state.teamList.slice();\r\n            teamList[teamIndex].accepted = true;\r\n            return { ...state, teamList: teamList };\r\n        case teamActionTypes.REJECT_TEAM:\r\n            teamIndex = state.teamList.findIndex(team => team.sessionId === action.sessionId);\r\n            teamList = state.teamList.slice();\r\n            teamList.splice(teamIndex, 1);\r\n            return { ...state, teamList: teamList };\r\n        case teamActionTypes.REMOVE_TEAMS:\r\n            return { ...initialTeamState };\r\n        case teamActionTypes.ADD_ANSWER:\r\n            const teamListCopy = [...state.teamList];\r\n            const team = teamListCopy.findIndex(team => team.sessionId === action.teamSessionId);\r\n            teamListCopy[team].answers.push({\r\n                questionId: action.questionId,\r\n                answer: action.answer,\r\n                correct: null\r\n            })\r\n            return {...state, teamList: teamListCopy}\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import * as Redux from 'redux';\r\nimport viewReducer from './viewReducer'\r\nimport roundsReducer from './roundsReducer'\r\nimport questionReducer from './questionReducer'\r\nimport roomReducer from './roomReducer'\r\nimport teamReducer from './teamReducer';\r\n\r\nconst mainReducer = Redux.combineReducers({\r\n  views: viewReducer,\r\n  teams: teamReducer,\r\n  rounds: roundsReducer,\r\n  questions: questionReducer,\r\n  room: roomReducer\r\n})\r\n\r\nexport default mainReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./assets/scss/style.scss\";\r\nimport App from './App';\r\nimport { restoreSession } from \"./actions/roomActions\";\r\n// import store from './store';\r\nimport thunk from \"redux-thunk\";\r\nimport mainReducer from \"./reducers/mainReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const store = createStore(mainReducer, applyMiddleware(thunk));\r\n\r\nconst RootComponent = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nstore.dispatch(restoreSession());\r\nReactDOM.render(RootComponent, document.getElementById(\"root\"));"],"sourceRoot":""}