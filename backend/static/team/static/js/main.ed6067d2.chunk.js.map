{"version":3,"sources":["components/ShotzTeam.jsx","environments/environment.js","actions/Enums.js","actions/viewActions.js","components/Login/Login.jsx","actions/gameActions.js","components/Navigation/Navigation.jsx","components/Message/Message.jsx","components/Question/Question.jsx","reducers/viewReducer.js","reducers/gameReducer.js","reducers/mainReducer.js","store.js","actions/wsActions.js","components/Error/Error.jsx","index.js"],"names":["ReactRedux","state","activeView","views","props","react_default","a","createElement","environment","API_URL","WS_URL","messageTypes","MSG_APPROVAL","MSG_KICKED","MSG_ACCEPTED","MSG_QUIZMASTERLEFT","MSG_SELECTINGCATEGORIES","MSG_QUESTIONANSWERED","MSG_ANSWERCORRECT","MSG_ANSWERINCORRECT","MSG_SUBMITCLOSED","viewActionTypes","VIEW_LOGINSCREEN","VIEW_MESSAGESCREEN","VIEW_QUESTIONSCREEN","viewLoginScreenAction","type","viewMessageScreenAction","message","viewQuestionScreenAction","restoreActiveScreenFromGameState","gameState","teamAccepted","dispatch","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","roomKey","teamName","e","target","value","name","setState","defineProperty","preventDefault","console","log","joinRoom","_this2","className","htmlFor","onChange","handleInput","id","placeholder","autoComplete","onClick","submitForm","React","Component","method","credentials","headers","Content-Type","body","JSON","stringify","fetch","concat","then","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","response","wrap","_context3","prev","next","json","sent","ok","initSocket","Error","error","stop","_x3","apply","arguments","catch","err","addErrorAction","Navigation","leaveRoom","game","_ref2","_callee2","_context2","_x2","Message","leaveGame","components_Navigation_Navigation","messageScreenText","Question","answer","submitAnswer","question","questionId","category","options","_ref5","_callee5","_context5","_x5","initalViewState","wsAllowed","initialState","accepted","rejected","Redux","length","undefined","action","objectSpread","store","createStore","mainReducer","applyMiddleware","thunk","reconnects","_ref","_callee","socket","_context","WebSocket","onopen","onmessage","eventInfo","parsedMessage","parse","data","getState","_ref6","_callee6","sortedTeams","team","teamPosition","_context6","slice","sort","b","score","find","findIndex","_x6","_x","getCurrentQuestion","onclose","setTimeout","removeError","xmlns","width","height","viewBox","d","getError","removeErrorAction","RootComponent","es","components_ShotzTeam","components_Error_Error","_ref4","_callee4","_context4","_x4","restoreSession","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed6067d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\n\r\nfunction ShotzTeam(props) {\r\n  return <props.activeView />;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activeView: state.views.activeView\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps)(ShotzTeam);\r\n","export default {\r\n  API_URL: \"http://localhost:3000\",\r\n  WS_URL: \"ws://localhost:3000\"\r\n};","export const messageTypes = {\r\n    MSG_APPROVAL: \"The quizmaster needs to approve your team!\",\r\n    MSG_KICKED: \"The quizmaster has removed team your team from the game!\",\r\n    MSG_ACCEPTED: \"The quizmaster has accepted your team! The game starts soon...\",\r\n    MSG_QUIZMASTERLEFT: \"The quizmaster has closed the game!\",\r\n    MSG_SELECTINGCATEGORIES: \"The quizmaster is selecting categories for the next round!\",\r\n    MSG_QUESTIONANSWERED: \"Waiting for next question...\",\r\n    MSG_ANSWERCORRECT: \"Your answer is correct!\",\r\n    MSG_ANSWERINCORRECT: \"Your answer is incorrect!\",\r\n    MSG_SUBMITCLOSED: \"Waiting for the next question\"\r\n};\r\n\r\nexport const viewActionTypes = {\r\n    VIEW_LOGINSCREEN: 1,\r\n    VIEW_MESSAGESCREEN: 2,\r\n    VIEW_QUESTIONSCREEN: 3\r\n};\r\n","import { viewActionTypes, messageTypes } from \"./Enums\";\r\n\r\nexport function viewLoginScreenAction() {\r\n    return {\r\n        type: viewActionTypes.VIEW_LOGINSCREEN\r\n    };\r\n}\r\n\r\nexport function viewMessageScreenAction(message) {\r\n    return {\r\n        type: viewActionTypes.VIEW_MESSAGESCREEN,\r\n        message: message\r\n    };\r\n}\r\n\r\nexport function viewQuestionScreenAction() {\r\n    return {\r\n        type: viewActionTypes.VIEW_QUESTIONSCREEN\r\n    };\r\n}\r\n\r\nexport function restoreActiveScreenFromGameState(gameState, teamAccepted) {\r\n    return dispatch => {\r\n        switch (gameState) {\r\n            case \"REGISTER\":\r\n                teamAccepted ? dispatch(viewMessageScreenAction(messageTypes.MSG_ACCEPTED)) : dispatch(viewMessageScreenAction(messageTypes.MSG_APPROVAL));\r\n                break;\r\n            case \"CATEGORY_SELECT\":\r\n                dispatch(viewMessageScreenAction(messageTypes.MSG_SELECTINGCATEGORIES));\r\n                break;\r\n            case \"IN_ROUND\":\r\n                dispatch(viewQuestionScreenAction());\r\n                break;\r\n            case \"END_ROUND\":\r\n                dispatch(viewMessageScreenAction(\"END ROUND!\"));\r\n                break;\r\n            case \"SUBMIT_CLOSED\":\r\n                dispatch(viewMessageScreenAction(messageTypes.MSG_SUBMITCLOSED));\r\n                break;\r\n            default:\r\n                dispatch(viewLoginScreenAction());\r\n                break;\r\n        }\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\nimport \"./Login.scss\";\r\nimport { joinRoom } from './../../actions/gameActions';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roomKey: \"\",\r\n            teamName: \"\"\r\n        };\r\n    }\r\n\r\n    handleInput(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault();\r\n        if (this.state.roomKey === \"\" || this.state.teamName === \"\") {\r\n            console.log(\"Vul alle velden in!\");\r\n        } else {\r\n            this.props.joinRoom(this.state.roomKey, this.state.teamName);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <header>\r\n                    <h1>Are you ready for Shotz?</h1>\r\n                </header>\r\n                <main>\r\n                    <div className=\"inputField\">\r\n                        <label htmlFor=\"roomKey\">Room code:</label>\r\n                        <input\r\n                            value={this.state.roomKey}\r\n                            onChange={e => this.handleInput(e)}\r\n                            id=\"roomKey\"\r\n                            name=\"roomKey\"\r\n                            placeholder=\"Room code\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"inputField\">\r\n                        <label htmlFor=\"teamName\">Team name:</label>\r\n                        <input\r\n                            value={this.state.teamName}\r\n                            onChange={e => this.handleInput(e)}\r\n                            id=\"teamName\"\r\n                            name=\"teamName\"\r\n                            placeholder=\"Team name\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"inputField\">\r\n                        <button onClick={e => this.submitForm(e)}>Join quizz</button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        joinRoom: (roomKey, teamName) => dispatch(joinRoom(roomKey, teamName))\r\n    };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import environment from '../environments/environment';\r\nimport {\r\n  viewLoginScreenAction,\r\n  viewMessageScreenAction,\r\n  restoreActiveScreenFromGameState,\r\n  viewQuestionScreenAction\r\n} from './viewActions';\r\nimport { initSocket } from './wsActions';\r\nimport { messageTypes } from './Enums';\r\n\r\nexport function addErrorAction(error) {\r\n  return {\r\n    type: 'ADD_ERROR',\r\n    error: error\r\n  };\r\n}\r\n\r\nexport function removeErrorAction(error) {\r\n  return {\r\n    type: 'REMOVE_ERROR',\r\n    error: error\r\n  };\r\n}\r\n\r\nexport function joinRoomAction(roomKey, teamName) {\r\n  return {\r\n    type: 'team_joinRoom',\r\n    roomKey: roomKey,\r\n    teamName: teamName\r\n  };\r\n}\r\n\r\nexport function restoreSessionAction(roomKey, teamName, accepted, question) {\r\n  return {\r\n    type: 'team_restoreSession',\r\n    roomKey: roomKey,\r\n    teamName: teamName,\r\n    accepted: accepted,\r\n    question: question\r\n  };\r\n}\r\n\r\nexport function teamAcceptedAction() {\r\n  return {\r\n    type: 'team_accepted'\r\n  };\r\n}\r\n\r\nexport function teamRejectedAction() {\r\n  return {\r\n    type: 'team_rejected'\r\n  };\r\n}\r\n\r\nexport function leaveRoomAction() {\r\n  return {\r\n    type: 'team_leaveRoom'\r\n  };\r\n}\r\n\r\nexport function setQuestionAction(question) {\r\n  return {\r\n    type: 'team_setQuestion',\r\n    question: question\r\n  };\r\n}\r\n\r\nexport function getCurrentQuestion(roomKey) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/question`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(setQuestionAction(body));\r\n          dispatch(viewQuestionScreenAction());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(addErrorAction(err.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function leaveRoom(roomKey) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(viewLoginScreenAction());\r\n          dispatch(leaveRoomAction());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(addErrorAction(err.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function joinRoom(roomKey, teamName) {\r\n  const method = {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ teamName: teamName })\r\n  };\r\n  return dispatch => {\r\n    fetch(`${environment.API_URL}/room/${roomKey}`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(joinRoomAction(body.roomKey, body.teamName));\r\n          dispatch(viewMessageScreenAction(messageTypes.MSG_APPROVAL));\r\n          dispatch(initSocket());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(addErrorAction(err.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function restoreSession() {\r\n  const method = {\r\n    method: 'GET',\r\n    credentials: 'include'\r\n  };\r\n  return dispatch => {\r\n    fetch(`${environment.API_URL}/room/restore/ROLE_TEAM`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(body.error);\r\n        } else {\r\n          dispatch(restoreSessionAction(body.roomKey, body.teamName, body.accepted, body.question));\r\n          dispatch(restoreActiveScreenFromGameState(body.gameState, body.accepted));\r\n          dispatch(initSocket());\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n}\r\n\r\nexport function submitAnswer(roomKey, questionId, answer) {\r\n  return dispatch => {\r\n    const options = {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        answer: answer\r\n      })\r\n    };\r\n\r\n    fetch(`${environment.API_URL}/room/${roomKey}/round/question/${questionId}/answer`, options)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(body.error);\r\n        } else {\r\n          dispatch(viewMessageScreenAction(messageTypes.MSG_QUESTIONANSWERED));\r\n          dispatch(initSocket());\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(addErrorAction(err.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function endRoundScore(roomKey, teamName) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}/teams/scores`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          const sortedTeams = body.slice().sort((a, b) => {\r\n            if (a.score > b.score) return -1;\r\n            if (a.score < b.score) return 1;\r\n            return 0;\r\n          });\r\n          const team = sortedTeams.find(team => team.teamName === teamName);\r\n          const teamPosition = sortedTeams.findIndex(team => team.teamName === teamName) + 1;\r\n          dispatch(\r\n            viewMessageScreenAction(\r\n              `End round! Your score is: ${team.score}. Your position is ${teamPosition}.`\r\n            )\r\n          );\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch(addErrorAction(err.message));\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\n\r\nimport './Navigation.scss';\r\nimport { leaveRoom } from '../../actions/gameActions';\r\nimport { viewLoginScreenAction } from '../../actions/viewActions';\r\n\r\nclass Navigation extends React.Component {\r\n  leaveRoom(roomKey) {\r\n    !roomKey ? this.props.viewLoginScreenAction() : this.props.leaveRoom(roomKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className='navInner'>\r\n          <div className='navLeft'>\r\n            <button onClick={() => this.leaveRoom(this.props.roomKey)}>Leave</button>\r\n          </div>\r\n          {this.props.roomKey !== null && (\r\n            <div className='navMiddle'>\r\n              <h2>Team: {this.props.teamName}</h2>\r\n            </div>\r\n          )}\r\n\r\n          {this.props.roomKey !== null && (\r\n            <div className='navRight'>\r\n              <span>Room: {this.props.roomKey}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.game.roomKey,\r\n    teamName: state.game.teamName\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    leaveRoom: roomKey => dispatch(leaveRoom(roomKey)),\r\n    viewLoginScreenAction: () => dispatch(viewLoginScreenAction())\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport \"./Message.scss\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nclass Message extends React.Component {\r\n    leaveRoom(roomKey) {\r\n        !roomKey ? this.props.viewLoginScreenAction() : this.props.leaveGame(roomKey);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Message Component\">\r\n                <Navigation />\r\n                <main>\r\n                    <div className=\"messageBox\">\r\n                        <h2>{this.props.messageScreenText}</h2>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        roomKey: state.game.roomKey,\r\n        messageScreenText: state.views.messageScreenText\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Message);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport \"./Question.scss\";\r\nimport { submitAnswer } from \"../../actions/gameActions\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nclass Question extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answer: null\r\n        };\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({\r\n            answer: e.target.value\r\n        });\r\n    }\r\n\r\n    submitAnswer(e) {\r\n        e.preventDefault();\r\n        if (this.state.answer === \"\" || this.state.answer === null) {\r\n            console.log(\"Vul alle velden in!\");\r\n        } else {\r\n            this.props.submitAnswer(this.props.roomKey, this.props.question.questionId, this.state.answer);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Component Question\">\r\n                <Navigation />\r\n                <main>\r\n                    <h1 className=\"question\">{this.props.question.question}</h1>\r\n                    <h2 className=\"category\">{this.props.question.category}</h2>\r\n                    <div className=\"inputField\">\r\n                        <label htmlFor=\"answer\">Answer:</label>\r\n                        <input\r\n                            onChange={e => this.handleInput(e)}\r\n                            id=\"answer\"\r\n                            name=\"answer\"\r\n                            placeholder=\"Your answer\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"inputField\">\r\n                        <button onClick={e => this.submitAnswer(e)}>Submit</button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        roomKey: state.game.roomKey,\r\n        question: state.game.question\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        submitAnswer: (roomKey, questionId, answer) => dispatch(submitAnswer(roomKey, questionId, answer))\r\n    };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Question);\r\n","import Login from \"../components/Login/Login.jsx\";\r\nimport Message from \"../components/Message/Message.jsx\";\r\nimport Question from \"../components/Question/Question\";\r\nimport { viewActionTypes } from \"../actions/Enums.js\";\r\n\r\nconst initalViewState = {\r\n    activeView: Login,\r\n    messageScreenText: 'If you see this, something went wrong!',\r\n    wsAllowed: false\r\n};\r\n\r\nexport default function viewReducer(state = initalViewState, action) {\r\n    switch (action.type) {\r\n        case viewActionTypes.VIEW_LOGINSCREEN:\r\n            return { ...state, activeView: Login, wsAllowed: false };\r\n        case viewActionTypes.VIEW_MESSAGESCREEN:\r\n            return { ...state, activeView: Message, messageScreenText: action.message, wsAllowed: true };\r\n        case viewActionTypes.VIEW_QUESTIONSCREEN:\r\n            return { ...state, activeView: Question, wsAllowed: true };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n  roomKey: null,\r\n  teamName: null,\r\n  accepted: false,\r\n  rejected: false,\r\n  question: null,\r\n  error: ''\r\n};\r\nexport default function gameReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_ERROR':\r\n      return { ...state, error: action.error };\r\n    case 'REMOVE_ERROR':\r\n      return { ...state, error: '' };\r\n    case 'team_joinRoom':\r\n      return {\r\n        ...state,\r\n        roomKey: action.roomKey,\r\n        teamName: action.teamName\r\n      };\r\n    case 'team_restoreSession':\r\n      return {\r\n        ...state,\r\n        roomKey: action.roomKey,\r\n        teamName: action.teamName,\r\n        accepted: action.accepted,\r\n        question: action.question\r\n      };\r\n\r\n    case 'team_accepted':\r\n      return {\r\n        ...state,\r\n        accepted: true\r\n      };\r\n    case 'team_rejected':\r\n      return {\r\n        ...initialState,\r\n        rejected: true\r\n      };\r\n    case 'team_leaveRoom':\r\n      return {\r\n        ...initialState\r\n      };\r\n    case 'team_setQuestion':\r\n      return {\r\n        ...state,\r\n        question: action.question\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n}\r\n","import * as Redux from \"redux\";\r\nimport viewReducer from \"./viewReducer\";\r\nimport gameReducer from './gameReducer';\r\n\r\nexport default Redux.combineReducers({\r\n  views: viewReducer,\r\n  game: gameReducer\r\n});\r\n","import thunk from \"redux-thunk\";\r\nimport mainReducer from \"./reducers/mainReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nconst store = createStore(mainReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import environment from '../environments/environment';\r\nimport {\r\n  endRoundScore,\r\n  teamAcceptedAction,\r\n  teamRejectedAction,\r\n  getCurrentQuestion,\r\n  leaveRoomAction\r\n} from './gameActions';\r\nimport { viewMessageScreenAction } from './viewActions';\r\nimport store from '../store';\r\nimport { messageTypes } from './Enums';\r\n\r\nlet reconnects = 0;\r\n\r\nexport function initSocket() {\r\n  console.log('Connecting to socket');\r\n  return async dispatch => {\r\n    const socket = await new WebSocket(`${environment.WS_URL}/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log('Websocket connected');\r\n      reconnects = 0;\r\n    };\r\n\r\n    socket.onmessage = eventInfo => {\r\n      const parsedMessage = JSON.parse(eventInfo.data);\r\n      dispatch(handleMessage(parsedMessage));\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      if (reconnects < 3 && store.getState().views.wsAllowed) {\r\n        console.log('Trying to reconnect');\r\n        reconnects++;\r\n        setTimeout(() => {\r\n          dispatch(initSocket());\r\n        }, 5000);\r\n      } else {\r\n        console.log('Websocket connection could not be restored');\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\nfunction handleMessage(message) {\r\n  return dispatch => {\r\n    switch (message.type) {\r\n      case 'team_accepted':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_ACCEPTED));\r\n        dispatch(teamAcceptedAction());\r\n        break;\r\n      case 'team_rejected':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_KICKED));\r\n        dispatch(teamRejectedAction());\r\n        break;\r\n      case 'team_selectingCategories':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_SELECTINGCATEGORIES));\r\n        break;\r\n      case 'team_endRound':\r\n        dispatch(endRoundScore(store.getState().game.roomKey, store.getState().game.teamName));\r\n        break;\r\n      case 'team_quizmasterLeft':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_QUIZMASTERLEFT));\r\n        dispatch(leaveRoomAction(store.getState().game.roomKey));\r\n        break;\r\n      case 'team_nextQuestion':\r\n        dispatch(getCurrentQuestion(store.getState().game.roomKey));\r\n        break;\r\n      case 'team_answerCorrect':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_ANSWERCORRECT));\r\n        break;\r\n      case 'team_answerIncorrect':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_ANSWERINCORRECT));\r\n        break;\r\n      case 'team_submitClosed':\r\n        dispatch(viewMessageScreenAction(messageTypes.MSG_SUBMITCLOSED));\r\n        break;\r\n      default:\r\n        console.log('Unknown message: ', message);\r\n        break;\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport { removeErrorAction } from \"../../actions/gameActions\";\r\nimport \"./Error.scss\";\r\n\r\nclass Error extends React.Component {\r\n  getError() {\r\n    if (this.props.error !== \"\") {\r\n      return (\r\n        <div className=\"Error\">\r\n          <h2>{this.props.error}</h2>\r\n          <button onClick={() => this.props.removeError(this.props.error)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.getError();\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    error: state.game.error\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeError: error => dispatch(removeErrorAction(error))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Error);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './assets/scss/style.scss';\r\nimport ShotzTeam from './components/ShotzTeam';\r\nimport { restoreSession } from './actions/gameActions';\r\nimport store from './store';\r\nimport Error from './components/Error/Error.jsx';\r\n\r\nconst RootComponent = (\r\n  <Provider store={store}>\r\n    <ShotzTeam />\r\n    <Error />\r\n  </Provider>\r\n);\r\n\r\nstore.dispatch(restoreSession());\r\nReactDOM.render(RootComponent, document.getElementById('root'));\r\n"],"sourceRoot":""}