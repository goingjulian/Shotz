{"version":3,"sources":["components/Game/shot.png","components/ShotzScoreBoard.jsx","environments/environment.js","actions/Enums.js","definitions/gameStates.js","actions/viewActions.js","actions/wsActions.js","actions/gameActions.js","components/Login/Login.jsx","components/General/Item.jsx","components/Game/Message.jsx","components/Navigation/Navigation.jsx","components/Game/Game.jsx","components/EndRound/EndRound.jsx","reducers/viewReducer.js","reducers/gameReducer.js","reducers/mainReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","ReactRedux","state","activeView","views","props","react_default","a","createElement","environment","API_URL","WS_URL","viewActionTypes","VIEW_LOGINSCREEN","VIEW_GAMESCREEN","VIEW_SCORESCREEN","gameStates","REGISTER","CATEGORY_SELECT","IN_ROUND","END_ROUND","END_GAME","SUBMIT_CLOSED","viewLoginScreenAction","type","viewGameScreenAction","viewScoreScreenAction","restoreActiveScreenFromGameState","gameState","dispatch","reconnects","initSocket","console","log","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","socket","wrap","_context","prev","next","WebSocket","concat","sent","onopen","onmessage","eventInfo","message","parsedMessage","JSON","parse","data","roomKey","store","getState","game","_ref4","_callee4","options","response","body","_context4","method","credentials","fetch","ok","Error","json","teams","gameActionTypes","scoreB_setTeams","stop","_x4","apply","this","arguments","scoreB_selecting_categories","_ref3","_callee3","_context3","error","scores","scoreB_setScores","scoreB_incCurRound","t0","_x3","endRoundScore","currentQuestionIndex","currentQuestion","scoreB_nextQuestion","teamId","questionId","correct","scoreB_setQuestionStatus","scoreB_endGame","scoreB_revealAnswer","onclose","wsAllowed","setTimeout","_x","scoreB_setRoom","setRoomAction","currentRound","joinRoom","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","teamName","e","target","value","name","setState","defineProperty","preventDefault","_this2","className","htmlFor","onChange","handleInput","id","placeholder","autoComplete","onClick","submitForm","React","Component","Item","itemClass","undefined","index","text","team","acceptHandler","xmlns","width","height","viewBox","d","closeHandler","Message","mainMessage","subMessage","messages","getInRoundMessages","shotzTime","src","shot","alt","shotzTeam","revealAnswer","answer","question","category","Navigation","leaveRoom","length","reactRedux","then","_ref5","_callee5","_context5","_x5","catch","err","components_Navigation_Navigation","Message_Message","map","key","EndRound","slice","sort","b","score","getSortedTeams","initalViewState","messageScreenText","initialState","Redux","objectSpread","Game","action","toConsumableArray","currentRoundCopy","valueOf","__webpack_exports__","createStore","mainReducer","applyMiddleware","thunk","RootComponent","es","components_ShotzScoreBoard","_ref2","_callee2","_context2","_x2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43c20b39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shot.c66f8312.png\";","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nfunction ShotzScoreBoard(props) {\r\n  return <props.activeView />;\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activeView: state.views.activeView\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps)(ShotzScoreBoard);\r\n","export default {\r\n  API_URL: \"http://51.75.74.95:3000\",\r\n  WS_URL: \"ws://51.75.74.95:3000\"\r\n};","export const messageTypes = {\r\n    MSG_APPROVAL: \"The quizmaster needs to approve your team!\",\r\n    MSG_KICKED: \"The quizmaster has removed team your team from the game!\",\r\n    MSG_ACCEPTED: \"The quizmaster has accepted your team! The game starts soon...\",\r\n    MSG_QUIZMASTERLEFT: \"The quizmaster has closed the game!\",\r\n    MSG_SELECTINGCATEGORIES: \"The quizmaster is selecting categories for the next round!\",\r\n    MSG_QUESTIONANSWERED: \"Waiting for next question...\",\r\n    MSG_ANSWERCORRECT: \"Your answer is correct!\",\r\n    MSG_ANSWERINCORRECT: \"Your answer is incorrect!\"\r\n};\r\n\r\nexport const viewActionTypes = {\r\n    VIEW_LOGINSCREEN: 1,\r\n    VIEW_GAMESCREEN: 2,\r\n    VIEW_SCORESCREEN: 3\r\n};\r\n","export default {\r\n    REGISTER: \"REGISTER\",\r\n    CATEGORY_SELECT: \"CATEGORY_SELECT\",\r\n    IN_ROUND: \"IN_ROUND\",\r\n    END_ROUND: \"END_ROUND\",\r\n    END_GAME: \"END_GAME\",\r\n    SUBMIT_CLOSED: \"SUBMIT_CLOSED\"\r\n};\r\n","import { viewActionTypes } from './Enums';\r\nimport gameStates from '../definitions/gameStates';\r\n\r\nexport function viewLoginScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_LOGINSCREEN\r\n  };\r\n}\r\n\r\nexport function viewGameScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_GAMESCREEN\r\n  };\r\n}\r\n\r\nexport function viewScoreScreenAction() {\r\n  return {\r\n    type: viewActionTypes.VIEW_SCORESCREEN\r\n  };\r\n}\r\n\r\nexport function restoreActiveScreenFromGameState(gameState) {\r\n  return dispatch => {\r\n    switch (gameState) {\r\n      case gameStates.REGISTER:\r\n      case gameStates.CATEGORY_SELECT:\r\n      case gameStates.IN_ROUND:\r\n        dispatch(viewGameScreenAction());\r\n        break;\r\n      case gameStates.END_ROUND:\r\n        dispatch(viewScoreScreenAction());\r\n        break;\r\n      case gameStates.SUBMIT_CLOSED:\r\n        dispatch(viewGameScreenAction());\r\n        break;\r\n      default:\r\n        dispatch(viewLoginScreenAction());\r\n        break;\r\n    }\r\n  };\r\n}\r\n","import environment from '../environments/environment';\r\nimport { store } from '../index';\r\nimport {\r\n  nextQuestionAction,\r\n  endRoundScore,\r\n  getTeams,\r\n  endGameAction,\r\n  selectingCategoriesAction,\r\n  revealAnswerAction,\r\n  setQuestionStatus\r\n} from './gameActions';\r\nimport { viewGameScreenAction, viewScoreScreenAction } from './viewActions';\r\n\r\nlet reconnects = 0;\r\n\r\nexport function initSocket() {\r\n  console.log('WS: Connecting to websocket');\r\n  return async dispatch => {\r\n    const socket = await new WebSocket(`${environment.WS_URL}/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log('WS: Websocket connected');\r\n      reconnects = 0;\r\n    };\r\n\r\n    socket.onmessage = eventInfo => {\r\n      const parsedMessage = JSON.parse(eventInfo.data);\r\n      dispatch(handleMessage(parsedMessage));\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      if (reconnects < 3 && store.getState().views.wsAllowed) {\r\n        console.log('WS: Trying to reconnect websocket');\r\n        reconnects++;\r\n        setTimeout(() => {\r\n          dispatch(initSocket());\r\n        }, 5000);\r\n      } else {\r\n        console.log('WS: Websocket connection could not be restored');\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\nfunction handleMessage(message) {\r\n  return dispatch => {\r\n    switch (message.type) {\r\n      case 'scoreB_team_accepted':\r\n      case 'scoreB_team_rejected':\r\n      case 'scoreB_teamLeft':\r\n        dispatch(getTeams(store.getState().game.roomKey));\r\n        break;\r\n      case 'scoreB_selectingCategories':\r\n        dispatch(selectingCategoriesAction());\r\n        dispatch(viewGameScreenAction());\r\n        break;\r\n      case 'scoreB_endRound':\r\n        dispatch(endRoundScore(store.getState().game.roomKey));\r\n        break;\r\n      case 'scoreB_nextQuestion':\r\n        dispatch(nextQuestionAction(message.currentQuestionIndex, message.currentQuestion));\r\n        dispatch(viewGameScreenAction());\r\n        break;\r\n      case 'scoreB_answerQuestion':\r\n        dispatch(setQuestionStatus(message.teamId, message.questionId, message.correct));\r\n        break;\r\n      case 'scoreB_quizmasterLeft':\r\n        dispatch(viewScoreScreenAction());\r\n        dispatch(endGameAction(message.scores.teams));\r\n        break;\r\n      case 'scoreB_revealAnswer':\r\n        dispatch(revealAnswerAction());\r\n        break;\r\n      default:\r\n        console.log('Unknown message: ', message);\r\n        break;\r\n    }\r\n  };\r\n}\r\n","import environment from '../environments/environment';\r\nimport {\r\n  viewLoginScreenAction,\r\n  viewGameScreenAction,\r\n  viewScoreScreenAction,\r\n  restoreActiveScreenFromGameState\r\n} from './viewActions';\r\n\r\nimport { initSocket } from './wsActions';\r\n\r\nexport const gameActionTypes = {\r\n  scoreB_setRoom: 'scoreB_setRoom',\r\n  scoreB_nextQuestion: 'scoreB_nextQuestion',\r\n  scoreB_setScores: 'scoreB_setScores',\r\n  scoreB_setTeams: 'scoreB_setTeams',\r\n  scoreB_endGame: 'scoreB_endGame',\r\n  scoreB_selecting_categories: 'scoreB_selecting_categories',\r\n  scoreB_incCurRound: 'scoreB_incCurRound',\r\n  scoreB_revealAnswer: 'scoreB_revealAnswer',\r\n  scoreB_setQuestionStatus: 'scoreB_setQuestionStatus'\r\n};\r\n\r\nexport function nextQuestionAction(currentQuestionIndex, currentQuestion) {\r\n  return {\r\n    type: gameActionTypes.scoreB_nextQuestion,\r\n    currentQuestionIndex: currentQuestionIndex,\r\n    currentQuestion: currentQuestion\r\n  };\r\n}\r\n\r\nexport function setRoomAction(roomKey, gameState, currentRound, currentQuestionIndex, teams) {\r\n  return {\r\n    type: gameActionTypes.scoreB_setRoom,\r\n    roomKey: roomKey,\r\n    gameState: gameState,\r\n    currentRound: currentRound,\r\n    currentQuestionIndex: currentQuestionIndex,\r\n    teams: teams\r\n  };\r\n}\r\n\r\nexport function setQuestionStatus(teamId, questionId, correct) {\r\n  return {\r\n    type: gameActionTypes.scoreB_setQuestionStatus,\r\n    teamId: teamId,\r\n    questionId: questionId,\r\n    correct: correct\r\n  };\r\n}\r\n\r\nexport function endRoundScoreAction(scores) {\r\n  return {\r\n    type: gameActionTypes.scoreB_setScores,\r\n    scores: scores\r\n  };\r\n}\r\n\r\nexport function setTeamsAction(teams) {\r\n  return {\r\n    type: gameActionTypes.scoreB_setTeams,\r\n    teams: teams\r\n  };\r\n}\r\n\r\nexport function endGameAction(scores) {\r\n  return {\r\n    type: gameActionTypes.scoreB_endGame,\r\n    scores: scores\r\n  };\r\n}\r\n\r\nexport function selectingCategoriesAction() {\r\n  return {\r\n    type: gameActionTypes.scoreB_selecting_categories\r\n  };\r\n}\r\n\r\nexport function increaseCurrentRoundAction() {\r\n  return {\r\n    type: gameActionTypes.scoreB_incCurRound\r\n  };\r\n}\r\n\r\nexport function revealAnswerAction() {\r\n  return {\r\n    type: gameActionTypes.scoreB_revealAnswer\r\n  };\r\n}\r\n\r\nexport function joinRoom(roomKey) {\r\n  const options = {\r\n    method: 'POST',\r\n    credentials: 'include'\r\n  };\r\n  return async dispatch => {\r\n    try {\r\n      const response = await fetch(`${environment.API_URL}/room/scoreboard/${roomKey}`, options);\r\n\r\n      const body = await response.json();\r\n      if (!response.ok) throw new Error(body.error);\r\n\r\n      dispatch(\r\n        setRoomAction(\r\n          body.roomKey,\r\n          body.gameState,\r\n          body.currentRound,\r\n          body.currentQuestionIndex,\r\n          body.teams\r\n        )\r\n      );\r\n      dispatch(viewGameScreenAction());\r\n      dispatch(initSocket());\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function restoreSession() {\r\n  return async dispatch => {\r\n    try {\r\n      const options = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n      };\r\n\r\n      const response = await fetch(`${environment.API_URL}/room/restore/ROLE_SCOREBOARD`, options);\r\n      const body = await response.json();\r\n      if (!response.ok) throw new Error(body.error);\r\n\r\n      dispatch(\r\n        setRoomAction(\r\n          body.roomKey,\r\n          body.gameState,\r\n          body.currentRound,\r\n          body.currentQuestionIndex,\r\n          body.teams\r\n        )\r\n      );\r\n      dispatch(restoreActiveScreenFromGameState(body.gameState));\r\n      dispatch(initSocket());\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function endRoundScore(roomKey) {\r\n  return async dispatch => {\r\n    try {\r\n      const method = {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n      };\r\n      const response = await fetch(`${environment.API_URL}/room/${roomKey}/teams/scores`, method);\r\n\r\n      const body = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(body.error);\r\n      } else {\r\n        dispatch(endRoundScoreAction(body));\r\n        dispatch(viewScoreScreenAction());\r\n        dispatch(increaseCurrentRoundAction());\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getTeams(roomKey) {\r\n  return async dispatch => {\r\n    const options = {\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    };\r\n\r\n    const response = await fetch(\r\n      `${environment.API_URL}/room/${roomKey}/teams?accepted=true`,\r\n      options\r\n    );\r\n\r\n    if (!response.ok) throw new Error('Error while fetching teams');\r\n\r\n    const body = await response.json();\r\n\r\n    dispatch(setTeamsAction(body));\r\n  };\r\n}\r\n\r\nexport function teamAcceptedAction() {\r\n  return {\r\n    type: 'team_accepted'\r\n  };\r\n}\r\n\r\nexport function teamRejectedAction() {\r\n  return {\r\n    type: 'team_rejected'\r\n  };\r\n}\r\n\r\nexport function leaveRoomAction() {\r\n  return {\r\n    type: 'team_leaveRoom'\r\n  };\r\n}\r\n\r\nexport function leaveRoom(roomKey) {\r\n  return dispatch => {\r\n    const method = {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    };\r\n    fetch(`${environment.API_URL}/room/${roomKey}`, method)\r\n      .then(async response => {\r\n        const body = await response.json();\r\n        if (response.ok) {\r\n          dispatch(viewLoginScreenAction());\r\n          dispatch(leaveRoomAction());\r\n        } else {\r\n          throw new Error(body.error);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\nimport './Login.scss';\r\nimport { joinRoom } from './../../actions/gameActions';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      roomKey: '',\r\n      teamName: ''\r\n    };\r\n  }\r\n\r\n  handleInput(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    if (this.state.roomKey === '') {\r\n    } else {\r\n      this.props.joinRoom(this.state.roomKey);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Login'>\r\n        <header>\r\n          <h1>Shotz: scoreboard</h1>\r\n        </header>\r\n        <main>\r\n          <div className='inputField'>\r\n            <label htmlFor='roomKey'>Room code:</label>\r\n            <input\r\n              value={this.state.roomKey}\r\n              onChange={e => this.handleInput(e)}\r\n              id='roomKey'\r\n              name='roomKey'\r\n              placeholder='Room code'\r\n              autoComplete='off'\r\n            />\r\n          </div>\r\n          <div className='inputField'>\r\n            <button onClick={e => this.submitForm(e)}>Join quizz</button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    joinRoom: roomKey => dispatch(joinRoom(roomKey))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport \"./General.scss\";\r\n\r\nexport default function Item(props) {\r\n  return (\r\n    <div className={props.itemClass + \" Item\"}>\r\n      {props.index !== undefined && (\r\n        <span className=\"itemIndex\">{props.index}.</span>\r\n      )}\r\n      {props.text !== undefined && (\r\n        <div className=\"itemTextHolder\">\r\n          <span className=\"itemText\">{props.text}</span>\r\n          {props.team !== undefined && (\r\n            <span className=\"itemTeam\">{props.team}</span>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"itemButtonsHolder\">\r\n        {props.acceptHandler !== undefined && (\r\n          <span className=\"itemButtonHolder\">\r\n            <button className=\"itemButton__accept\" onClick={props.acceptHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" />\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        )}\r\n        {props.closeHandler !== undefined && (\r\n          <span className=\"itemButtonHolder\">\r\n            <button className=\"itemButton__close\" onClick={props.closeHandler}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\r\n              </svg>\r\n            </button>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport gameStates from '../../definitions/gameStates';\r\n\r\nimport shot from './shot.png';\r\n\r\nexport default class Message extends React.Component {\r\n  render() {\r\n    let mainMessage, subMessage;\r\n    switch (this.props.gameState) {\r\n      case gameStates.REGISTER:\r\n        mainMessage = `Waiting for players...`;\r\n        subMessage = `Join with key: ${this.props.roomKey}`;\r\n        break;\r\n      case gameStates.CATEGORY_SELECT:\r\n        mainMessage = `The quizmaster is starting a new round`;\r\n        subMessage = `Selecting categories...`;\r\n        break;\r\n      case gameStates.IN_ROUND:\r\n      case gameStates.SUBMIT_CLOSED:\r\n        const messages = this.getInRoundMessages();\r\n        mainMessage = messages.mainMessage;\r\n        subMessage = messages.subMessage;\r\n        break;\r\n      default:\r\n        mainMessage = `Oops, something went wrong`;\r\n        subMessage = 'Error occured';\r\n    }\r\n    return (\r\n      <div className='question'>\r\n        <h2>{subMessage}</h2>\r\n        <h1>{mainMessage}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getInRoundMessages() {\r\n    let mainMessage, subMessage;\r\n    if (this.props.shotzTime) {\r\n      mainMessage = (\r\n        <div>\r\n          Shotz!\r\n          <img src={shot} alt='A Shot Glass' />\r\n        </div>\r\n      );\r\n      subMessage = `${this.props.shotzTime.shotzTeam} must all take a shot`;\r\n    } else if (this.props.revealAnswer) {\r\n      mainMessage = `The correct answer is: ${this.props.currentQuestion.answer}`;\r\n      subMessage = `Did you guess the right answer?`;\r\n    } else if (this.props.currentQuestion) {\r\n      mainMessage = this.props.currentQuestion.question;\r\n      subMessage = this.props.currentQuestion.category;\r\n    } else {\r\n      mainMessage = `Waiting for the next question...`;\r\n      subMessage = ``;\r\n    }\r\n\r\n    return { mainMessage, subMessage };\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as reactRedux from 'react-redux';\r\nimport gameStates from '../../definitions/gameStates';\r\n\r\nimport './Navigation.scss';\r\nimport { leaveRoom } from '../../actions/gameActions';\r\nimport { viewLoginScreenAction } from '../../actions/viewActions';\r\n\r\nclass Navigation extends React.Component {\r\n  leaveRoom(roomKey) {\r\n    !roomKey ? this.props.viewLoginScreenAction() : this.props.leaveRoom(roomKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className='navInner'>\r\n          <div className='navLeft'>\r\n            <button onClick={() => this.leaveRoom(this.props.roomKey)}>Leave</button>\r\n          </div>\r\n\r\n          {this.props.gameState === gameStates.REGISTER ? (\r\n            <div className='navMiddle'>\r\n              <h2>RoomKey: {this.props.roomKey}</h2>\r\n            </div>\r\n          ) : (\r\n            <div className='navMiddle'>\r\n              <h2>Question {this.props.currentQuestionIndex + 1}</h2>\r\n              <h2>Round {this.props.currentRound}</h2>\r\n            </div>\r\n          )}\r\n\r\n          <div className='navRight'>\r\n            <span>\r\n              {this.props.teams.length} {this.props.teams.length === 1 ? 'team' : 'teams'} connected\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    gameState: state.game.gameState,\r\n    roomKey: state.game.roomKey,\r\n    currentQuestionIndex: state.game.currentQuestionIndex,\r\n    currentRound: state.game.currentRound,\r\n    teams: state.game.teams\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    leaveRoom: roomKey => dispatch(leaveRoom(roomKey)),\r\n    viewLoginScreenAction: () => dispatch(viewLoginScreenAction())\r\n  };\r\n}\r\n\r\nexport default reactRedux.connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from 'react';\r\nimport * as ReactRedux from 'react-redux';\r\nimport './Game.scss';\r\nimport { joinRoom } from './../../actions/gameActions';\r\nimport Item from '../General/Item.jsx';\r\nimport Message from './Message';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nfunction Game(props) {\r\n  return (\r\n    <div className='Component Game'>\r\n      <Navigation />\r\n      <main>\r\n        <Message\r\n          gameState={props.gameState}\r\n          roomKey={props.roomKey}\r\n          currentQuestion={props.currentQuestion}\r\n          revealAnswer={props.revealAnswer}\r\n        />\r\n\r\n        <div className='teams'>\r\n          {props.teams.map(team => {\r\n            return <Item key={team.teamName} text={`${team.teamName}`} itemClass={`team`} />;\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.game.roomKey,\r\n    gameState: state.game.gameState,\r\n    currentRound: state.game.currentRound,\r\n    currentQuestionIndex: state.game.currentQuestionIndex,\r\n    currentQuestion: state.game.currentQuestion,\r\n    teams: state.game.teams,\r\n    revealAnswer: state.game.revealAnswer\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    joinRoom: roomKey => dispatch(joinRoom(roomKey))\r\n  };\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import React from \"react\";\r\nimport * as ReactRedux from \"react-redux\";\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nimport \"./EndRound.scss\";\r\n\r\nclass EndRound extends React.Component {\r\n  getSortedTeams() {\r\n    return this.props.teams.slice().sort((a, b) => {\r\n      if (a.score > b.score) return -1\r\n      if (a.score < b.score) return 1\r\n      return 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Component EndRound\">\r\n        <Navigation />\r\n        <main>\r\n          <h1 className=\"endRoundMsg\">End round {this.props.currentRound}</h1>\r\n          <ul>\r\n            {this.getSortedTeams().map((team, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <span className=\"position\">{index + 1}.</span>\r\n                  <span>\r\n                    {team.teamName}\r\n                  </span>\r\n                  <span className='score'>{team.score} points</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomKey: state.game.roomKey,\r\n    currentRound: state.game.currentRound,\r\n    teams: state.game.teams\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {};\r\n}\r\n\r\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(EndRound);\r\n","import Login from \"../components/Login/Login.jsx\";\r\nimport Game from \"../components/Game/Game.jsx\";\r\nimport EndRound from '../components/EndRound/EndRound.jsx';\r\nimport { viewActionTypes } from \"../actions/Enums.js\";\r\n\r\nconst initalViewState = {\r\n    activeView: Login,\r\n    messageScreenText: 'If you see this, something went wrong!',\r\n    wsAllowed: false\r\n};\r\n\r\nexport default function viewReducer(state = initalViewState, action) {\r\n    switch (action.type) {\r\n        case viewActionTypes.VIEW_LOGINSCREEN:\r\n            return { ...state, activeView: Login, wsAllowed: false };\r\n        case viewActionTypes.VIEW_GAMESCREEN:\r\n            return { ...state, activeView: Game, wsAllowed: true };\r\n        case viewActionTypes.VIEW_SCORESCREEN:\r\n            return { ...state, activeView: EndRound, wsAllowed: true };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { gameActionTypes } from '../actions/gameActions';\r\nimport gameStates from '../definitions/gameStates';\r\n\r\nconst initialState = {\r\n  roomKey: null,\r\n  gameState: null,\r\n  currentRound: null,\r\n  currentQuestionIndex: null,\r\n  currentQuestion: null,\r\n  teams: null,\r\n  shotzTime: null,\r\n  scores: null,\r\n  revealAnswer: false\r\n};\r\nexport default function gameReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case gameActionTypes.scoreB_setRoom:\r\n      return {\r\n        ...state,\r\n        roomKey: action.roomKey,\r\n        gameState: action.gameState,\r\n        currentRound: action.currentRound,\r\n        currentQuestionIndex: action.currentQuestionIndex,\r\n        teams: action.teams,\r\n        revealAnswer: false\r\n      };\r\n    case gameActionTypes.scoreB_nextQuestion:\r\n      return {\r\n        ...state,\r\n        currentQuestionIndex: action.currentQuestionIndex,\r\n        currentQuestion: action.currentQuestion,\r\n        gameState: gameStates.IN_ROUND,\r\n        revealAnswer: false\r\n      };\r\n    case gameActionTypes.scoreB_setScores:\r\n      return { ...state, scores: action.scores, revealAnswer: false };\r\n    case gameActionTypes.scoreB_setTeams:\r\n      return { ...state, teams: action.teams };\r\n    case gameActionTypes.scoreB_endGame:\r\n      return {\r\n        ...state,\r\n        teams: [...action.scores],\r\n        gameState: gameStates.END_GAME,\r\n        revealAnswer: false,\r\n        roomKey: null\r\n      };\r\n    case gameActionTypes.scoreB_selecting_categories:\r\n      return { ...state, gameState: gameStates.CATEGORY_SELECT };\r\n    case gameActionTypes.scoreB_incCurRound:\r\n      let currentRoundCopy = state.currentRound.valueOf();\r\n      currentRoundCopy++;\r\n      return { ...state, currentRound: currentRoundCopy };\r\n    case gameActionTypes.scoreB_revealAnswer:\r\n      if(state.currentQuestion === null) return state;\r\n      return { ...state, revealAnswer: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Redux from \"redux\";\r\nimport viewReducer from \"./viewReducer\";\r\nimport gameReducer from './gameReducer';\r\n\r\nexport default Redux.combineReducers({\r\n  views: viewReducer,\r\n  game: gameReducer\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./assets/scss/style.scss\";\r\nimport ShotzScoreBoard from \"./components/ShotzScoreBoard\";\r\nimport { restoreSession } from \"./actions/gameActions\";\r\nimport thunk from \"redux-thunk\";\r\nimport mainReducer from \"./reducers/mainReducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const store = createStore(mainReducer, applyMiddleware(thunk));\r\n\r\nconst RootComponent = (\r\n  <Provider store={store}>\r\n    <ShotzScoreBoard />\r\n  </Provider>\r\n);\r\n\r\nstore.dispatch(restoreSession());\r\nReactDOM.render(RootComponent, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}